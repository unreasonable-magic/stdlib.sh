'\" t
.\"     Title: stdlib-url-join
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 2.0.23
.\"      Date: 2025-07-02
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "STDLIB\-URL\-JOIN" "1" "2025-07-02" "\ \&" "\ \&"
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH "NAME"
stdlib-url-join \- join URL path components together
.SH "SYNOPSIS"
.sp
stdlib \fBurl/join\fP \fI<component>\fP...
.SH "DESCRIPTION"
.sp
Join multiple URL path components together with forward slashes, handling redundant slashes and trailing slashes appropriately.
.SH "ARGUMENTS"
.sp
\fI<component>\fP...
.RS 4
One or more path components to join together
.RE
.SH "EXAMPLES"
.sp
Join simple path components:
.sp
.if n .RS 4
.nf
.fam C
$ stdlib url/join "api" "v1" "users"
api/v1/users
.fam
.fi
.if n .RE
.sp
Join components with existing slashes:
.sp
.if n .RS 4
.nf
.fam C
$ stdlib url/join "api/" "/v1/" "users"
api/v1/users
.fam
.fi
.if n .RE
.sp
Join base URL with path components:
.sp
.if n .RS 4
.nf
.fam C
$ stdlib url/join "https://example.com" "api" "users" "123"
https://example.com/api/users/123
.fam
.fi
.if n .RE
.SH "EXIT STATUS"
.sp
\f(CR0\fP
.RS 4
Success
.RE
.sp
\f(CR1\fP
.RS 4
No components provided
.RE